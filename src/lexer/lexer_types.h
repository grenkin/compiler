#ifndef LEXER_TYPES_H_INCLUDED
#define LEXER_TYPES_H_INCLUDED

enum TokenClass {
    TOKEN_CLASS_BEGIN_OF_FILE,
    TOKEN_CLASS_END_OF_FILE,
    TOKEN_CLASS_ERROR,
    TOKEN_CLASS_INT_CONST, TOKEN_CLASS_REAL_CONST,
    TOKEN_CLASS_CHAR_CONST, TOKEN_CLASS_STRING_CONST,
    TOKEN_CLASS_IDENTIFIER_OR_KEYWORD,
    TOKEN_CLASS_OPERATOR,
    TOKEN_CLASS_DELIMITER
};

enum IdentifierOrKeywordT {
    IDENT_OR_KEYWORD_IDENT,
    IDENT_OR_KEYWORD_AUTO,
    IDENT_OR_KEYWORD_BREAK,
    IDENT_OR_KEYWORD_CASE,
    IDENT_OR_KEYWORD_CHAR,
    IDENT_OR_KEYWORD_CONST,
    IDENT_OR_KEYWORD_CONTINUE,
    IDENT_OR_KEYWORD_DEFAULT,
    IDENT_OR_KEYWORD_DO,
    IDENT_OR_KEYWORD_DOUBLE,
    IDENT_OR_KEYWORD_ELSE,
    IDENT_OR_KEYWORD_ENUM,
    IDENT_OR_KEYWORD_EXTERN,
    IDENT_OR_KEYWORD_FLOAT,
    IDENT_OR_KEYWORD_FOR,
    IDENT_OR_KEYWORD_GOTO,
    IDENT_OR_KEYWORD_IF,
    IDENT_OR_KEYWORD_INT,
    IDENT_OR_KEYWORD_LONG,
    IDENT_OR_KEYWORD_REGISTER,
    IDENT_OR_KEYWORD_RETURN,
    IDENT_OR_KEYWORD_SHORT,
    IDENT_OR_KEYWORD_SIGNED,
    IDENT_OR_KEYWORD_SIZEOF,
    IDENT_OR_KEYWORD_STATIC,
    IDENT_OR_KEYWORD_STRUCT,
    IDENT_OR_KEYWORD_SWITCH,
    IDENT_OR_KEYWORD_TYPEDEF,
    IDENT_OR_KEYWORD_UNION,
    IDENT_OR_KEYWORD_UNSIGNED,
    IDENT_OR_KEYWORD_VOID,
    IDENT_OR_KEYWORD_VOLATILE,
    IDENT_OR_KEYWORD_WHILE
};

enum OperatorT {
    OP_LESS_LESS_EQUAL,
    OP_MORE_MORE_EQUAL,
    OP_ELLIPSIS,
    OP_PLUS_PLUS,
    OP_MINUS_MINUS,
    OP_ARROW,
    OP_LESS_LESS,
    OP_MORE_MORE,
    OP_LESS_EQUAL,
    OP_MORE_EQUAL,
    OP_EQUAL_EQUAL,
    OP_EXCL_MARK_EQUAL,
    OP_AMP_AMP,
    OP_VERT_LINE_VERT_LINE,
    OP_STAR_EQUAL,
    OP_SLASH_EQUAL,
    OP_PERCENT_EQUAL,
    OP_PLUS_EQUAL,
    OP_MINUS_EQUAL,
    OP_COVER_EQUAL,
    OP_VERT_LINE_EQUAL,
    OP_AMP_EQUAL,
    OP_POINT,
    OP_COMMA,
    OP_COLON,
    OP_AMP,
    OP_VERT_LINE,
    OP_COVER,
    OP_SQUIGGLE,
    OP_EXCL_MARK,
    OP_STAR,
    OP_SLASH,
    OP_PLUS,
    OP_MINUS,
    OP_MORE,
    OP_LESS,
    OP_EQUAL,
    OP_PERCENT,
    OP_QUEST_MARK,
    OP_NONE
};

enum DelimiterT {
    DELIM_LEFT_BRACE,
    DELIM_RIGHT_BRACE,
    DELIM_LEFT_ROUND_BRACKET,
    DELIM_RIGHT_ROUND_BRACKET,
    DELIM_LEFT_SQUARE_BRACKET,
    DELIM_RIGHT_SQUARE_BRACKET,
    DELIM_SEMICOLON
};

#endif // LEXER_TYPES_H_INCLUDED
